name: Release
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      update_type:
        description: Update type
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

permissions: read-all

jobs:
  # Create release
  initiate:
    name: Initiate
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: write # To push a commit
      pull-requests: write # To open a Pull Request
    steps:
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - name: Install Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install Node.js dependencies
        run: npm ci
      - name: Bump version
        run: npm version ${{ github.event.inputs.update_type }} --no-git-tag-version
      - name: Update CHANGELOG
        run: node scripts/bump-changelog.js
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@b4d51739f96fca8047ad065eccef63442d8e99f7
        with:
          title: New ${{ github.event.inputs.update_type }} release
          body: |
            _This Pull Request was created automatically_

            ---

            ### Merge checklist

            - [ ] All continuous integration checks passed.
            - [ ] The version number is consistently updated in `package.json` and `package-lock.json`.
            - [ ] A new release is added to `CHANGELOG.md` with the correct version number and date.
            - [ ] The new version number is in accordance with [Semantic Versioning].
            - [ ] There are no unexpected changes in the Pull Request.

            ---

            ### Post-merge checklist

            - [ ] The new version is published to [npm].
            - [ ] The `v0` branch is at the merge commit.
            - [ ] There is a git tag for the new version on the merge commit.

            [npm]: https://www.npmjs.com/package/@ericcornelissen/eslint-plugin-top
            [semantic versioning]: https://semver.org/spec/v2.0.0.html
          branch: release-${{ github.event.inputs.update_type }}
          branch-suffix: random
          commit-message: Version bump

  # Publish release
  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    permissions:
      contents: write # To push a tag
    steps:
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          fetch-depth: 0 # To obtain all tags
      - name: Install Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install Node.js dependencies
        run: npm ci
      - name: Validate release readiness
        run: |
          npm run build
          npm run test
      - name: Check if version is released
        id: version
        run: |
          VERSION="v$(jq -r '.version' < package.json)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          if [ "$(git tag --list "$VERSION")" ]; then
            echo "released=true" >> $GITHUB_OUTPUT
          else
            echo "released=false" >> $GITHUB_OUTPUT
          fi
      - name: Publish tag to remote
        if: ${{ steps.version.outputs.released == 'false' }}
        run: |
          # Create & push a tag for the new version
          git tag "${{ steps.version.outputs.version }}"
          git push origin "${{ steps.version.outputs.version }}"

          # Update what commit the v0 branch points to
          git push origin HEAD:v0
      - name: Publish to npm
        uses: JS-DevTools/npm-publish@0f451a94170d1699fd50710966d48fb26194d939
        if: ${{ steps.version.outputs.released == 'false' }}
        with:
          token: ${{ secrets.NPM_TOKEN }}
